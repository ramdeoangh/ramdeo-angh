generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  passwordHash String
  role         Role     @default(user)
  posts        Post[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Post {
  id              Int       @id @default(autoincrement())
  title           String
  slug            String    @unique
  excerpt         String?
  contentMarkdown String
  coverUrl        String?
  status          PostStatus @default(draft)
  publishedAt     DateTime?
  author          User      @relation(fields: [authorId], references: [id])
  authorId        Int
  category        Category? @relation(fields: [categoryId], references: [id])
  categoryId      Int?
  tags            PostTag[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique
  slug String @unique
  posts Post[]
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String @unique
  slug String @unique
  posts PostTag[]
}

model PostTag {
  post   Post @relation(fields: [postId], references: [id])
  postId Int
  tag    Tag  @relation(fields: [tagId], references: [id])
  tagId  Int

  @@id([postId, tagId])
}

model CVUpload {
  id            Int      @id @default(autoincrement())
  fileName      String
  filePath      String
  mimeType      String
  size          Int
  extractedText String?
  uploadedAt    DateTime @default(now())
}

model Media {
  id        Int      @id @default(autoincrement())
  url       String
  mimeType  String
  size      Int
  createdAt DateTime @default(now())
}

enum Role {
  admin
  user
}

enum PostStatus {
  draft
  published
  scheduled
}


